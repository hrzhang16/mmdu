// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// sign
arma::mat sign(arma::mat D);
RcppExport SEXP _mmdu_sign(SEXP DSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type D(DSEXP);
    rcpp_result_gen = Rcpp::wrap(sign(D));
    return rcpp_result_gen;
END_RCPP
}
// dist_partial
arma::mat dist_partial(const arma::mat& Theta, const arma::mat& A);
RcppExport SEXP _mmdu_dist_partial(SEXP ThetaSEXP, SEXP ASEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type Theta(ThetaSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type A(ASEXP);
    rcpp_result_gen = Rcpp::wrap(dist_partial(Theta, A));
    return rcpp_result_gen;
END_RCPP
}
// project_double
double project_double(double x, double C);
RcppExport SEXP _mmdu_project_double(SEXP xSEXP, SEXP CSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type x(xSEXP);
    Rcpp::traits::input_parameter< double >::type C(CSEXP);
    rcpp_result_gen = Rcpp::wrap(project_double(x, C));
    return rcpp_result_gen;
END_RCPP
}
// project_vec
arma::rowvec project_vec(arma::rowvec a, double C);
RcppExport SEXP _mmdu_project_vec(SEXP aSEXP, SEXP CSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::rowvec >::type a(aSEXP);
    Rcpp::traits::input_parameter< double >::type C(CSEXP);
    rcpp_result_gen = Rcpp::wrap(project_vec(a, C));
    return rcpp_result_gen;
END_RCPP
}
// project_mat
arma::mat project_mat(arma::mat A, double C);
RcppExport SEXP _mmdu_project_mat(SEXP ASEXP, SEXP CSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type A(ASEXP);
    Rcpp::traits::input_parameter< double >::type C(CSEXP);
    rcpp_result_gen = Rcpp::wrap(project_mat(A, C));
    return rcpp_result_gen;
END_RCPP
}
// lik_fn
double lik_fn(const arma::mat& Theta, const arma::mat& A, double delta, const arma::mat& Y, const arma::mat& Omega);
RcppExport SEXP _mmdu_lik_fn(SEXP ThetaSEXP, SEXP ASEXP, SEXP deltaSEXP, SEXP YSEXP, SEXP OmegaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type Theta(ThetaSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type A(ASEXP);
    Rcpp::traits::input_parameter< double >::type delta(deltaSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type Y(YSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type Omega(OmegaSEXP);
    rcpp_result_gen = Rcpp::wrap(lik_fn(Theta, A, delta, Y, Omega));
    return rcpp_result_gen;
END_RCPP
}
// dt_fn
arma::mat dt_fn(const arma::mat& Theta, const arma::mat& A, double delta, const arma::mat& Y, const arma::mat& Omega);
RcppExport SEXP _mmdu_dt_fn(SEXP ThetaSEXP, SEXP ASEXP, SEXP deltaSEXP, SEXP YSEXP, SEXP OmegaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type Theta(ThetaSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type A(ASEXP);
    Rcpp::traits::input_parameter< double >::type delta(deltaSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type Y(YSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type Omega(OmegaSEXP);
    rcpp_result_gen = Rcpp::wrap(dt_fn(Theta, A, delta, Y, Omega));
    return rcpp_result_gen;
END_RCPP
}
// da_fn
arma::mat da_fn(const arma::mat& Theta, const arma::mat& A, double delta, const arma::mat& Y, const arma::mat& Omega);
RcppExport SEXP _mmdu_da_fn(SEXP ThetaSEXP, SEXP ASEXP, SEXP deltaSEXP, SEXP YSEXP, SEXP OmegaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type Theta(ThetaSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type A(ASEXP);
    Rcpp::traits::input_parameter< double >::type delta(deltaSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type Y(YSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type Omega(OmegaSEXP);
    rcpp_result_gen = Rcpp::wrap(da_fn(Theta, A, delta, Y, Omega));
    return rcpp_result_gen;
END_RCPP
}
// ut_fn
arma::mat ut_fn(const arma::mat& Theta, const arma::mat& A, double delta, const arma::mat& Y, const arma::mat& Omega, double M);
RcppExport SEXP _mmdu_ut_fn(SEXP ThetaSEXP, SEXP ASEXP, SEXP deltaSEXP, SEXP YSEXP, SEXP OmegaSEXP, SEXP MSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type Theta(ThetaSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type A(ASEXP);
    Rcpp::traits::input_parameter< double >::type delta(deltaSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type Y(YSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type Omega(OmegaSEXP);
    Rcpp::traits::input_parameter< double >::type M(MSEXP);
    rcpp_result_gen = Rcpp::wrap(ut_fn(Theta, A, delta, Y, Omega, M));
    return rcpp_result_gen;
END_RCPP
}
// ua_fn
arma::mat ua_fn(const arma::mat& Theta, const arma::mat& A, double delta, const arma::mat& Y, const arma::mat& Omega, double M);
RcppExport SEXP _mmdu_ua_fn(SEXP ThetaSEXP, SEXP ASEXP, SEXP deltaSEXP, SEXP YSEXP, SEXP OmegaSEXP, SEXP MSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type Theta(ThetaSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type A(ASEXP);
    Rcpp::traits::input_parameter< double >::type delta(deltaSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type Y(YSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type Omega(OmegaSEXP);
    Rcpp::traits::input_parameter< double >::type M(MSEXP);
    rcpp_result_gen = Rcpp::wrap(ua_fn(Theta, A, delta, Y, Omega, M));
    return rcpp_result_gen;
END_RCPP
}
// opti_fn
Rcpp::List opti_fn(arma::mat Theta, arma::mat A, double delta, const arma::mat& Y, const arma::mat& Omega, double M, double tol);
RcppExport SEXP _mmdu_opti_fn(SEXP ThetaSEXP, SEXP ASEXP, SEXP deltaSEXP, SEXP YSEXP, SEXP OmegaSEXP, SEXP MSEXP, SEXP tolSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type Theta(ThetaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type A(ASEXP);
    Rcpp::traits::input_parameter< double >::type delta(deltaSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type Y(YSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type Omega(OmegaSEXP);
    Rcpp::traits::input_parameter< double >::type M(MSEXP);
    Rcpp::traits::input_parameter< double >::type tol(tolSEXP);
    rcpp_result_gen = Rcpp::wrap(opti_fn(Theta, A, delta, Y, Omega, M, tol));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_mmdu_sign", (DL_FUNC) &_mmdu_sign, 1},
    {"_mmdu_dist_partial", (DL_FUNC) &_mmdu_dist_partial, 2},
    {"_mmdu_project_double", (DL_FUNC) &_mmdu_project_double, 2},
    {"_mmdu_project_vec", (DL_FUNC) &_mmdu_project_vec, 2},
    {"_mmdu_project_mat", (DL_FUNC) &_mmdu_project_mat, 2},
    {"_mmdu_lik_fn", (DL_FUNC) &_mmdu_lik_fn, 5},
    {"_mmdu_dt_fn", (DL_FUNC) &_mmdu_dt_fn, 5},
    {"_mmdu_da_fn", (DL_FUNC) &_mmdu_da_fn, 5},
    {"_mmdu_ut_fn", (DL_FUNC) &_mmdu_ut_fn, 6},
    {"_mmdu_ua_fn", (DL_FUNC) &_mmdu_ua_fn, 6},
    {"_mmdu_opti_fn", (DL_FUNC) &_mmdu_opti_fn, 7},
    {NULL, NULL, 0}
};

RcppExport void R_init_mmdu(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
