setwd("~/Dropbox/MDS_Code/MovielensData/ml-100k")
udata = read.csv("u.data", header = FALSE, sep = "")
Y = matrix(0,943,1682)
Omega = matrix(1,943,1682) 
for(i in 1:943){Y[i,udata[(udata[,1] == i),2]] = 1}

movie_select = which(apply(Y,2,sum)>=100)
Y <- Y[,movie_select]
Omega <- Omega[,movie_select]

N = 943
J = length(movie_select)
K = 2

############ starting points
# Theta.init = matrix(rtruncnorm(N*K, -2, 2, 0, 0.7), N, K)
# A.init = matrix(rtruncnorm(J*K, -2, 2, 0, 0.7), J, K)
# delta.init = 0
# 
# num.p = apply(Y, 1, sum)
# index.p = order(num.p, decreasing = TRUE)[1 : 10]
# num.i = apply(Y, 2, sum)
# index.i = order(num.i, decreasing = TRUE)[1 : 10]
# 
# Y.sub = Y[index.p, index.i]
# q = sum(Y.sub) / (length(index.p) * length(index.i))
# delta.init = log(q / (1 - q))
# 
# tmp1 = svd(Y * Omega)
# p = sum(Omega) / (N * J)
# thre = sum(tmp1$d >= 1.01 * sqrt(N * (p + 3 * p * (1 - p))))
# thre <- max(thre, K+3)
# tmp2 = tmp1$u[, 1 : thre] %*% diag(tmp1$d[1 : thre]) %*% t(tmp1$v[, 1 : thre]) / p
# tmp2[which(tmp2 < 0.001)] <- 0.001
# tmp2[which(tmp2 > 0.999)] <- 0.999
# S.init = log(tmp2 / (1 - tmp2))
# D.init = delta.init * rep(1, N) %*% t(rep(1, J)) - S.init
# 
# unf = unfold(D.init, ndims = K, squared = TRUE)
# Theta.init = unf$A
# A.init = unf$B
# 
# plot(Theta.init[,1], Theta.init[,2], col = grey(0.1), xlim = c(-2,3), ylim = c(-5,4))
# points(A.init[,1], A.init[,2], col = 2, pch = 2)


############ optimize
# source('~/Dropbox/MDS/MDU_new/code/basic_function.R', echo=TRUE)
# temp = opti.fn(Theta.init, A.init, delta.init, Y, Omega, M = 5, h = 5, eps = 1e-7)
# 
# Theta = temp$Theta
# A = temp$A
# delta = temp$delta
# D = dist_partial(Theta, A)
# S = delta * rep(1, N) %*% t(rep(1, J)) - D
# P = exp(S) / (1 + exp(S))
# 
# AP = princomp(A)
# A <- AP$scores
# Theta <- (Theta - rep(1,N)%*%t(AP$center))%*%AP$loadings

# save(delta, file = "~/Dropbox/MDS/MDU_new/results/movie/binary/delta_K2.Rdata")
# save(Theta, file = "~/Dropbox/MDS/MDU_new/results/movie/binary/Theta_K2.Rdata")
# save(A, file = "~/Dropbox/MDS/MDU_new/results/movie/binary/A_K2.Rdata")

load("~/Dropbox/MDS/MDU_new/results/movie/binary/delta.Rdata")
load("~/Dropbox/MDS/MDU_new/results/movie/binary/Theta.Rdata")
load("~/Dropbox/MDS/MDU_new/results/movie/binary/A.Rdata")


##############indices

rate = vector();for(i in 1:1682){rate[i] = sum(udata[ (udata[,2]==i),3 ])/(length(udata[ (udata[,2]==i),  3 ]))}
uitem = read.csv("u.item", header = FALSE, sep = "|")
release_year = as.numeric(substr(as.character(uitem[,3]),8,11))
release_month = match(substr(as.character(uitem[,3]),4,6),month.abb)
release_date = as.numeric(substr(as.character(uitem[,3]),1,2))
release_date[1373]=4
release = release_year*365+release_month*30+release_date

# the 267th movie are NA!

num.movie_select = apply(Y,2,sum)
user = read.csv("u.user", header = FALSE, sep = "|")

day = (udata$V4/(3600*24)-10123)
time_movie = rep(0,1682);for(i in 1:1682){time_movie[i] = median(  day[(udata[,2]==i)]  )}#/length(day[(udata[,2]==i)])}
time_people = rep(0,943);for(i in 1:943){time_people[i] = median(  day[(udata[,1]==i)]  )}#/length(day[(udata[,1]==i)])}

rate_select = rate[movie_select]
uitem_select = uitem[movie_select,]
release_select = release[movie_select]
release_year_select = release_year[movie_select]
type_select = list();for(i in 1:19){type_select[[i]] = which(uitem_select[,i+5]>=1)}
job_name = names(table(user$V4));occupy = list(); for(i in 1:21){occupy[[i]] = which(user$V4 == job_name[i]) }
time_movie_select = time_movie[movie_select]

num.movie_col = rep(1,J)
num.movie_col[which((num.movie_select>=100)&(num.movie_select<=quantile(num.movie_select,0.25)))] = 1
num.movie_col[which((num.movie_select>quantile(num.movie_select,0.25))&(num.movie_select<=quantile(num.movie_select,0.5)))] = 2
num.movie_col[which((num.movie_select>quantile(num.movie_select,0.5))&(num.movie_select<=quantile(num.movie_select,0.75)))] = 3
num.movie_col[which(num.movie_select>quantile(num.movie_select,0.75))] = 4

release_col = rep(1,J)
release_col[which((release_year_select==1997)|(release_year_select==1998))] = 3
release_col[which((release_year_select==1995)|(release_year_select==1996))] = 2
release_col[which(release_year_select<=1994)] = 1

num.persons_select = apply(Y,1,sum)

num.persons_col = rep(1,N)
num.persons_col[which(num.persons_select<=quantile(num.persons_select,0.25))] = 2
num.persons_col[which((num.persons_select>quantile(num.persons_select,0.25))&(num.persons_select<=quantile(num.persons_select,0.5)))] = 3
num.persons_col[which((num.persons_select>quantile(num.persons_select,0.5))&(num.persons_select<=quantile(num.persons_select,0.75)))] = 4
num.persons_col[which(num.persons_select>quantile(num.persons_select,0.75))] = 5

age_col = rep(1,N)
age_col[which(user[,2]<=20)]=2

gender_col = rep(1,N) 
gender_col[which(user[,3]=="M")] = 2

############ plot
par(mfrow = c(1,1))

### moive and person
pdf("~/Dropbox/MDS/MDU_new/figure/movie_person.pdf", width = 6, height = 6)
plot(Theta[,1],Theta[,2], col = grey(0.1),pch = 2,xlim = c(-4.5, 3), ylim = c(-4, 2), ann = FALSE)
points(A[,1],A[,2],col = 2, pch = 1)
legend("bottomright", c("movie","user"), col = c(2,1), pch = c(1,2), inset = 0.03)
dev.off()

### movie number
pdf("~/Dropbox/MDS/MDU_new/figure/movie_number.pdf", width = 5, height = 5)
plot(A[,1],A[,2],col = num.movie_col, pch = num.movie_col+3, xlim = c(-3,3), ylim = c(-4,1.5), ann = FALSE)
points(A[17,1],A[17,2],col = 7,pch = 15)
points(A[2,1],A[2,2],col = 7, pch = 15)
points(A[3,1],A[3,2],col = 7, pch = 15)
points(A[69,1],A[69,2],col = 7, pch = 15)
legend("bottomright",c("<=127","128-169","170-229",">=230","examples"), col = c(1,2,3,4,7), pch = c(4,5,6,7,15), inset = 0.03, cex = 0.75)
dev.off()
# points(A[17,1],A[17,2],col = 7,pch = 15)
# points(A[2,1],A[2,2],col = 7, pch = 15)
# points(A[3,1],A[3,2],col = 7, pch = 15)
# points(A[69,1],A[69,2],col = 7, pch = 15)



### movie releasing time
pdf("~/Dropbox/MDS/MDU_new/figure/movie_time.pdf", width = 5, height = 5)
plot(A[,1],A[,2],col = release_col, pch = release_col+3, xlim = c(-3,3), ylim = c(-4,1.5), ann = FALSE)
legend("bottomright", c("1997-1998","1995-1996","before 1995", "examples"), col = c(3,2,1,7), pch = c(6,5,4,15), inset = 0.03, cex = 0.75)
points(A[73,1],A[73,2],col = 7, pch =15)
points(A[4,1],A[4,2],col = 7, pch =15)
points(A[157,1],A[157,2],col = 7, pch =15)
dev.off()

### movie ratings
plot(A[,1],A[,2],col = floor(rate_select), xlim = c(-1.5,1.5), ylim = c(-1.5,1.5), ann = FALSE)
points(A[73,1],A[73,2],col = 6, pch =15)
points(A[4,1],A[4,2],col = 6, pch =15)
points(A[157,1],A[157,2],col = 6, pch =15)

### person number
pdf("~/Dropbox/MDS/MDU_new/figure/person_number.pdf", width = 5, height = 5)
plot(Theta[,1],Theta[,2],col = num.persons_col, pch = num.persons_col+3, xlim = c(-4.5,2), ylim = c(-3.5,1), ann = FALSE)
# points(A[,1],A[,2],col = 1, pch = 1)
legend("bottomright",c("<=24","25-47","48-103",">=104"), col = c(2,3,4,5), pch = c(5,6,7,8), inset = 0, cex = 0.75)
dev.off()


### movie type
type_col = rep(1,J)

type_1 = c(type_select[[2]],type_select[[3]],type_select[[7]])
type_2 = c(type_select[[13]],type_select[[15]])
type_3 = c(type_select[[10]],type_select[[16]])

for(i in 1:19){
type_col = rep(1,J)
type_col[type_select[[i]]]=2
plot(A[,1],A[,2],col = type_col, xlim = c(-1.5,1.5), ylim = c(-1.5,1.5), ann = FALSE)
}

######### some coefficients
norm.A = apply(A, 1, norm, type = "2")
cor(norm.A, num.movie, method = "kendall")


### test
plot(Theta[,1],Theta[,2], col = grey(0.1),pch = 2,xlim = c(-3.5,2), ylim = c(-3.5,2), ann = FALSE)
temp1 = which(Theta[,2] > 0)
temp2 = which(Theta[,2] > 0)

