library(mmdu)
library(mvtnorm)
Rcpp::sourceCpp('~/Dropbox/MDS/MDU_JMLR/code/package/other/fn.cpp')
Y <- movielens$data
N <- nrow(Y)
J <- ncol(Y)
Omega <- matrix(1, N, J)
K <- 2

# L <- rep(0, 5)
# Theta_list <- list()
# A_list <- list()
#
# for (i in 1 : 5) {
#   set.seed(i)
#   Theta_init <- rmvnorm(N, mean = rep(0, K))
#   Theta_init <- 3 * sqrt(runif(N, 0, 1)) * Theta_init / apply(Theta_init, 1, norm, type = "2")
#   A_init <- rmvnorm(J, mean = rep(0, K))
#   A_init <- 3 * sqrt(runif(J, 0, 1)) * A_init / apply(A_init, 1, norm, type = "2")
#   tmp <- opti_fn(Theta_init, A_init, delta = 0.1, Y, Omega, M = 2, eps = 1e-3 * N * J)
#   L[i] <- tmp$likelihood
#   Theta_list[[i]] <- tmp$Theta
#   A_list[[i]] <- tmp$A
# }
#
# i <- which.max(L)
# Theta_init <- Theta_list[[i]]
# A_init <- A_list[[i]]
# res <- opti_fn(Theta_init, A_init, delta = 0.1, Y, Omega, M = 3.5, eps = 0.1)
#
# Theta <- res$Theta
# A <- res$A
#
# plot(Theta[,1],Theta[,2], col = grey(0.2),pch = 2,xlim = c(-3.5,4), ylim = c(-3,1.5), ann = FALSE)
# points(A[,1],A[,2],col = 2, pch = 1)

#########################
# using SVD to find starting points

# Theta_init <- rmvnorm(N, mean = rep(0, K))
# Theta_init <- 3 * sqrt(runif(N, 0, 1)) * Theta_init / apply(Theta_init, 1, norm, type = "2")
# A_init <- rmvnorm(J, mean = rep(0, K))
# A_init <- 3 * sqrt(runif(J, 0, 1)) * A_init / apply(A_init, 1, norm, type = "2")
#
# tmp1 <- svd(Y * Omega)
# p <- sum(Omega) / (N * J)
# thre <- sum(tmp1$d >= 1.01 * sqrt(N * (p + 3 * p * (1 - p))))
# thre <- max(thre, K+3)
# tmp2 <- tmp1$u[, 1 : thre] %*% diag(tmp1$d[1 : thre]) %*% t(tmp1$v[, 1 : thre]) / p
# tmp2[which(tmp2 < 0.001)] <- 0.1
# tmp2[which(tmp2 > 0.999)] <- 0.9
# D.init <- log(2 / tmp2 - 1) - 0.1
# D.init[D.init <= 0] = 0
#
# unf = unfold(D.init, ndims = 2, squared = TRUE)
# Theta.init = unf$A
# A.init = unf$B
#
# plot(Theta.init[,1], Theta.init[,2], col = grey(0.1), xlim = c(-2,3), ylim = c(-5,4))
# points(A.init[,1], A.init[,2], col = 2, pch = 2)


#########################
# using smacof to find starting points
library(smacof)
Y_dis <- 1 - Y
res <- unfolding(Y_dis, ndim = 2, type = "ordinal")
Theta_class <- res$conf.row
A_class <- res$conf.col

plot(Theta_class[,1], Theta_class[,2], col = grey(0.1), xlim = c(-2,3), ylim = c(-5,4))
points(A_class[,1], A_class[,2], col = 2, pch = 2)

res <- opti_fn(Theta_class, A_class, delta = 0.1, Y, Omega, M = 3.5, eps = 0.1)
Theta <- res$Theta
A <- res$A
plot(Theta[,1],Theta[,2], col = grey(0.2),pch = 2,xlim = c(-4, 4), ylim = c(-3, 3), ann = FALSE)
points(A[,1],A[,2],col = 2, pch = 1)

which(A[, 2] < -1.5)
movielens$name_movie[which(A[, 2] < -1.5)]



###
setwd("~/Dropbox/MDS_Code/最新模型代码/movie/results")

LL = rep(0,100)
for(i in 1:100){load(paste("",i,"ll.Rdata"));LL[i] = ll}

load(paste("",which.max(LL),"Theta.Rdata"))
load(paste("",which.max(LL),"A.Rdata"))
plot(Theta[,1],Theta[,2], col = grey(0.2),pch = 2,xlim = c(-4, 4), ylim = c(-3, 3), ann = FALSE)
points(A[,1],A[,2],col = 2, pch = 1)
points(A[c(155,195,204), 1], A[c(155,195,204), 2], col = 3)
